{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport { usePetData } from '@/context/PetDataContext'\n\nexport default function Header() {\n  const { petData } = usePetData()\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n      <div className=\"px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Pet ProTech\n            </h1>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Monitoring {petData.pet.name} - {petData.pet.breed}\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-right\">\n              <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                {petData.pet.owner.name}\n              </p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                Pet Owner\n              </p>\n            </div>\n            <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center\">\n              <span className=\"text-white font-semibold text-sm\">\n                {petData.pet.owner.name.charAt(0)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIe,SAAS;;IACtB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;IAE7B,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAmD;;;;;;0CAGjE,6LAAC;gCAAE,WAAU;;oCAA2C;oCAC1C,QAAQ,GAAG,CAAC,IAAI;oCAAC;oCAAI,QAAQ,GAAG,CAAC,KAAK;;;;;;;;;;;;;kCAGtD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDACV,QAAQ,GAAG,CAAC,KAAK,CAAC,IAAI;;;;;;kDAEzB,6LAAC;wCAAE,WAAU;kDAA2C;;;;;;;;;;;;0CAI1D,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CACb,QAAQ,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C;GAlCwB;;QACF,oIAAA,CAAA,aAAU;;;KADR","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Sidebar.tsx"],"sourcesContent":["'use client'\n\ninterface SidebarProps {\n  activeSection: string\n  onSectionChange: (section: 'dashboard' | 'health' | 'activities' | 'medications' | 'orderMedicine' | 'behaviorChanges' | 'vaccinations' | 'insurance' | 'profile' | 'support') => void\n}\n\nexport default function Sidebar({ activeSection, onSectionChange }: SidebarProps) {\n  const menuItems = [\n    { id: 'dashboard', label: 'Dashboard', description: 'Overview & Live Data' },\n    { id: 'health', label: 'Health Records', description: 'Medical History' },\n    { id: 'activities', label: 'Activities', description: 'Daily Activity Log' },\n    { id: 'medications', label: 'Medications', description: 'Current Prescriptions' },\n    { id: 'orderMedicine', label: 'Order Medicine', description: 'Order Prescribed Medicine' },\n    { id: 'behaviorChanges', label: 'Behavior Changes', description: 'Behavioral Change Summary' },\n    { id: 'vaccinations', label: 'Vaccinations', description: 'Immunization Records' },\n    { id: 'insurance', label: 'Insurance', description: 'Policy Details' },\n    { id: 'profile', label: 'Pet Profile', description: 'Basic Information' },\n    { id: 'support', label: 'Customer Service', description: 'Contact support & find nearby veterinary clinics' },\n  ]\n\n  return (\n    <aside className=\"w-64 bg-white dark:bg-gray-800 shadow-sm border-r border-gray-200 dark:border-gray-700 min-h-screen\">\n      <nav className=\"p-4\">\n        <div className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <button\n              key={item.id}\n              onClick={() => onSectionChange(item.id as any)}\n              className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n                activeSection === item.id\n                  ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 border border-blue-200 dark:border-blue-800'\n                  : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <div className=\"font-medium text-sm\">{item.label}</div>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                {item.description}\n              </div>\n            </button>\n          ))}\n        </div>\n      </nav>\n    </aside>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;AAOe,SAAS,QAAQ,EAAE,aAAa,EAAE,eAAe,EAAgB;IAC9E,MAAM,YAAY;QAChB;YAAE,IAAI;YAAa,OAAO;YAAa,aAAa;QAAuB;QAC3E;YAAE,IAAI;YAAU,OAAO;YAAkB,aAAa;QAAkB;QACxE;YAAE,IAAI;YAAc,OAAO;YAAc,aAAa;QAAqB;QAC3E;YAAE,IAAI;YAAe,OAAO;YAAe,aAAa;QAAwB;QAChF;YAAE,IAAI;YAAiB,OAAO;YAAkB,aAAa;QAA4B;QACzF;YAAE,IAAI;YAAmB,OAAO;YAAoB,aAAa;QAA4B;QAC7F;YAAE,IAAI;YAAgB,OAAO;YAAgB,aAAa;QAAuB;QACjF;YAAE,IAAI;YAAa,OAAO;YAAa,aAAa;QAAiB;QACrE;YAAE,IAAI;YAAW,OAAO;YAAe,aAAa;QAAoB;QACxE;YAAE,IAAI;YAAW,OAAO;YAAoB,aAAa;QAAmD;KAC7G;IAED,qBACE,6LAAC;QAAM,WAAU;kBACf,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC;wBAEC,SAAS,IAAM,gBAAgB,KAAK,EAAE;wBACtC,WAAW,CAAC,+DAA+D,EACzE,kBAAkB,KAAK,EAAE,GACrB,gHACA,4EACJ;;0CAEF,6LAAC;gCAAI,WAAU;0CAAuB,KAAK,KAAK;;;;;;0CAChD,6LAAC;gCAAI,WAAU;0CACZ,KAAK,WAAW;;;;;;;uBAVd,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;AAkB1B;KAtCwB","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useSensorData.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\nexport interface SensorData {\n  heartRate: number\n  activityLevel: number\n  temperature: number\n  steps: number\n  sleepHours: number\n  caloriesBurned: number\n  lastUpdated: Date\n  batteryLevel: number\n  signalStrength: number\n}\n\nexport function useSensorData() {\n  const [sensorData, setSensorData] = useState<SensorData>({\n    heartRate: 85,\n    activityLevel: 65,\n    temperature: 101.5,\n    steps: 2450,\n    sleepHours: 8.5,\n    caloriesBurned: 320,\n    lastUpdated: new Date(),\n    batteryLevel: 78,\n    signalStrength: 92\n  })\n\n  const [isConnected, setIsConnected] = useState(true)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      try {\n        setSensorData(prevData => ({\n          heartRate: Math.max(60, Math.min(120, prevData.heartRate + (Math.random() - 0.5) * 10)),\n          activityLevel: Math.max(0, Math.min(100, prevData.activityLevel + (Math.random() - 0.5) * 20)),\n          temperature: Math.max(99, Math.min(103, prevData.temperature + (Math.random() - 0.5) * 0.5)),\n          steps: prevData.steps + Math.floor(Math.random() * 10),\n          sleepHours: Math.max(0, Math.min(12, prevData.sleepHours + (Math.random() - 0.5) * 0.1)),\n          caloriesBurned: prevData.caloriesBurned + Math.floor(Math.random() * 5),\n          lastUpdated: new Date(),\n          batteryLevel: Math.max(0, Math.min(100, prevData.batteryLevel - 0.01)),\n          signalStrength: Math.max(0, Math.min(100, prevData.signalStrength + (Math.random() - 0.5) * 5))\n        }))\n\n        // Simulate occasional connection issues\n        setIsConnected(Math.random() > 0.05) // 95% uptime\n      } catch (error) {\n        console.error('Error updating sensor data:', error)\n        setIsConnected(false)\n      }\n    }, 3000) // Update every 3 seconds\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return { sensorData, isConnected }\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAgBO,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;QACvD,WAAW;QACX,eAAe;QACf,aAAa;QACb,OAAO;QACP,YAAY;QACZ,gBAAgB;QAChB,aAAa,IAAI;QACjB,cAAc;QACd,gBAAgB;IAClB;IAEA,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,WAAW;oDAAY;oBAC3B,IAAI;wBACF;gEAAc,CAAA,WAAY,CAAC;oCACzB,WAAW,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,SAAS,SAAS,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;oCACnF,eAAe,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,SAAS,aAAa,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;oCAC1F,aAAa,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,SAAS,WAAW,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;oCACvF,OAAO,SAAS,KAAK,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oCACnD,YAAY,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,SAAS,UAAU,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;oCACnF,gBAAgB,SAAS,cAAc,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oCACrE,aAAa,IAAI;oCACjB,cAAc,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,SAAS,YAAY,GAAG;oCAChE,gBAAgB,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,SAAS,cAAc,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;gCAC9F,CAAC;;wBAED,wCAAwC;wBACxC,eAAe,KAAK,MAAM,KAAK,MAAM,aAAa;;oBACpD,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+BAA+B;wBAC7C,eAAe;oBACjB;gBACF;mDAAG,MAAM,yBAAyB;;YAElC;2CAAO,IAAM,cAAc;;QAC7B;kCAAG,EAAE;IAEL,OAAO;QAAE;QAAY;IAAY;AACnC;GA1CgB","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/PetDashboard.tsx"],"sourcesContent":["'use client'\n\nimport { usePetData } from '@/context/PetDataContext'\nimport { useSensorData } from '@/hooks/useSensorData'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\n\nexport default function PetDashboard() {\n  const { petData } = usePetData()\n  const { sensorData, isConnected } = useSensorData()\n\n  const getHealthStatus = () => {\n    const { heartRate, temperature, activityLevel } = sensorData\n    \n    if (heartRate < 70 || heartRate > 110 || temperature < 100 || temperature > 102.5) {\n      return { status: 'warning', color: 'bg-yellow-500', text: 'Attention Needed' }\n    }\n    if (activityLevel > 80) {\n      return { status: 'excellent', color: 'bg-green-500', text: 'Excellent' }\n    }\n    return { status: 'good', color: 'bg-blue-500', text: 'Good' }\n  }\n\n  const healthStatus = getHealthStatus()\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            {petData.pet.name}'s Dashboard\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Real-time health monitoring and activity tracking\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {isConnected ? 'Smart Tag Connected' : 'Connection Lost'}\n          </span>\n        </div>\n      </div>\n\n      {/* Health Status Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            Overall Health Status\n            <Badge className={`${healthStatus.color} text-white`}>\n              {healthStatus.text}\n            </Badge>\n          </CardTitle>\n          <CardDescription>\n            Last updated: {sensorData.lastUpdated.toLocaleTimeString()}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n                {sensorData.heartRate}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">BPM</div>\n              <div className=\"text-xs text-gray-500\">Heart Rate</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                {sensorData.temperature.toFixed(1)}°F\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Temperature</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                {sensorData.activityLevel}%\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Activity</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n                {sensorData.steps.toLocaleString()}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Steps Today</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Detailed Metrics */}\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Activity Level</CardTitle>\n            <CardDescription>Current activity intensity</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Activity Level</span>\n                <span>{sensorData.activityLevel}%</span>\n              </div>\n              <Progress value={sensorData.activityLevel} className=\"h-2\" />\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {sensorData.activityLevel > 70 ? 'High activity detected' : \n                 sensorData.activityLevel > 40 ? 'Moderate activity' : 'Low activity'}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Sleep & Rest</CardTitle>\n            <CardDescription>Sleep quality metrics</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Sleep Hours</span>\n                  <span>{sensorData.sleepHours.toFixed(1)}h</span>\n                </div>\n                <Progress value={(sensorData.sleepHours / 12) * 100} className=\"h-2\" />\n              </div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                Recommended: 8-12 hours daily\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Device Status</CardTitle>\n            <CardDescription>Smart tag information</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Battery Level</span>\n                  <span>{sensorData.batteryLevel.toFixed(0)}%</span>\n                </div>\n                <Progress value={sensorData.batteryLevel} className=\"h-2\" />\n              </div>\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Signal Strength</span>\n                  <span>{sensorData.signalStrength.toFixed(0)}%</span>\n                </div>\n                <Progress value={sensorData.signalStrength} className=\"h-2\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Recent Activity Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Today's Summary</CardTitle>\n          <CardDescription>Key metrics for today</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {sensorData.steps.toLocaleString()}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Steps</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {sensorData.caloriesBurned}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Calories Burned</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {petData.activities.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Activities Logged</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {petData.medications.filter(m => m.active).length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Active Medications</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1327, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1456, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1933, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/HealthRecords.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\n\nexport default function HealthRecords() {\n  const { petData, dispatch } = usePetData()\n  const [isAddingRecord, setIsAddingRecord] = useState(false)\n  const behavioralSymptoms = [\n    'Lethargy',\n    'Hiding',\n    'Changes in Appetite',\n    'Increased Vocalization',\n    'Aggression'\n  ]\n\n  const [newRecord, setNewRecord] = useState({\n    date: new Date().toISOString().split('T')[0],\n    type: 'checkup' as 'checkup' | 'illness' | 'behavior' | 'injury',\n    description: '',\n    veterinarian: '',\n    notes: '',\n    behaviorSymptoms: [] as string[]\n  })\n\n  const handleAddRecord = () => {\n    if (newRecord.type === 'behavior' ? newRecord.behaviorSymptoms.length > 0 : newRecord.description.trim()) {\n      dispatch({\n        type: 'ADD_HEALTH_RECORD',\n        payload: {\n          id: Date.now().toString(),\n          ...newRecord,\n          description: newRecord.type === 'behavior' ? newRecord.behaviorSymptoms.join(', ') : newRecord.description\n        }\n      })\n      setNewRecord({\n        date: new Date().toISOString().split('T')[0],\n        type: 'checkup',\n        description: '',\n        veterinarian: '',\n        notes: '',\n        behaviorSymptoms: []\n      })\n      setIsAddingRecord(false)\n    }\n  }\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'checkup': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300'\n      case 'illness': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'\n      case 'behavior': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'\n      case 'injury': return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300'\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300'\n    }\n  }\n\n  const sortedRecords = [...petData.healthRecords].sort((a, b) => \n    new Date(b.date).getTime() - new Date(a.date).getTime()\n  )\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Health Records\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Medical history and behavioral observations for {petData.pet.name}\n          </p>\n        </div>\n        <Dialog open={isAddingRecord} onOpenChange={setIsAddingRecord}>\n          <DialogTrigger asChild>\n            <Button>Add New Record</Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>Add Health Record</DialogTitle>\n              <DialogDescription>\n                Add a new health record or behavioral observation for {petData.pet.name}.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"date\" className=\"text-right\">\n                  Date\n                </Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  value={newRecord.date}\n                  onChange={(e) => setNewRecord({ ...newRecord, date: e.target.value })}\n                  className=\"col-span-3\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"type\" className=\"text-right\">\n                  Type\n                </Label>\n                <Select\n                  value={newRecord.type}\n                  onValueChange={(value: any) => setNewRecord({ ...newRecord, type: value })}\n                >\n                  <SelectTrigger className=\"col-span-3\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"checkup\">Checkup</SelectItem>\n                    <SelectItem value=\"illness\">Illness</SelectItem>\n                    <SelectItem value=\"behavior\">Behavior</SelectItem>\n                    <SelectItem value=\"injury\">Injury</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"description\" className=\"text-right\">\n                  Description\n                </Label>\n                {newRecord.type === 'behavior' ? (\n                  <div className=\"col-span-3 space-y-1\">\n                    {behavioralSymptoms.map((symptom) => (\n                      <label key={symptom} className=\"inline-flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={newRecord.behaviorSymptoms.includes(symptom)}\n                          onChange={(e) => {\n                            const checked = e.target.checked\n                            setNewRecord((prev) => {\n                              const symptoms = new Set(prev.behaviorSymptoms)\n                              if (checked) symptoms.add(symptom)\n                              else symptoms.delete(symptom)\n                              return { ...prev, behaviorSymptoms: Array.from(symptoms) }\n                            })\n                          }}\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-2 focus:ring-blue-500\"\n                        />\n                        <span className=\"text-sm text-gray-700 dark:text-gray-300\">{symptom}</span>\n                      </label>\n                    ))}\n                  </div>\n                ) : (\n                  <Input\n                    id=\"description\"\n                    value={newRecord.description}\n                    onChange={(e) => setNewRecord({ ...newRecord, description: e.target.value })}\n                    className=\"col-span-3\"\n                    placeholder=\"Brief description of the record\"\n                  />\n                )}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"veterinarian\" className=\"text-right\">\n                  Veterinarian\n                </Label>\n                <Input\n                  id=\"veterinarian\"\n                  value={newRecord.veterinarian}\n                  onChange={(e) => setNewRecord({ ...newRecord, veterinarian: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Dr. Name (optional)\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"notes\" className=\"text-right\">\n                  Notes\n                </Label>\n                <Textarea\n                  id=\"notes\"\n                  value={newRecord.notes}\n                  onChange={(e) => setNewRecord({ ...newRecord, notes: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Additional notes (optional)\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={() => setIsAddingRecord(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAddRecord}>Add Record</Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Health Records List */}\n      <div className=\"space-y-4\">\n        {sortedRecords.length === 0 ? (\n          <Card>\n            <CardContent className=\"text-center py-8\">\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                No health records found. Add your first record to get started.\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          sortedRecords.map((record) => (\n            <Card key={record.id}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg\">\n                    {record.description}\n                  </CardTitle>\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge className={getTypeColor(record.type)}>\n                      {record.type.charAt(0).toUpperCase() + record.type.slice(1)}\n                    </Badge>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {new Date(record.date).toLocaleDateString('en-IN')}\n                    </span>\n                  </div>\n                </div>\n                {record.veterinarian && (\n                  <CardDescription>\n                    Veterinarian: {record.veterinarian}\n                  </CardDescription>\n                )}\n              </CardHeader>\n              {record.notes && (\n                <CardContent>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    {record.notes}\n                  </p>\n                </CardContent>\n              )}\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* Health Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Health Summary</CardTitle>\n          <CardDescription>Overview of health record types</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {['checkup', 'illness', 'behavior', 'injury'].map((type) => {\n              const count = petData.healthRecords.filter(r => r.type === type).length\n              return (\n                <div key={type} className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {count}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400 capitalize\">\n                    {type} Records\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ActivitiesLog.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\n\nexport default function ActivitiesLog() {\n  const { petData, dispatch } = usePetData()\n  const [isAddingActivity, setIsAddingActivity] = useState(false)\n  const [newActivity, setNewActivity] = useState({\n    date: new Date().toISOString().split('T')[0],\n    time: new Date().toTimeString().slice(0, 5),\n    type: 'walk' as 'walk' | 'play' | 'eat' | 'sleep' | 'exercise',\n    duration: 30,\n    intensity: 'medium' as 'low' | 'medium' | 'high',\n    notes: ''\n  })\n\n  const handleAddActivity = () => {\n    if (newActivity.duration > 0) {\n      dispatch({\n        type: 'ADD_ACTIVITY',\n        payload: {\n          id: Date.now().toString(),\n          ...newActivity\n        }\n      })\n      setNewActivity({\n        date: new Date().toISOString().split('T')[0],\n        time: new Date().toTimeString().slice(0, 5),\n        type: 'walk',\n        duration: 30,\n        intensity: 'medium',\n        notes: ''\n      })\n      setIsAddingActivity(false)\n    }\n  }\n\n  const getActivityColor = (type: string) => {\n    switch (type) {\n      case 'walk': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300'\n      case 'play': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'\n      case 'eat': return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300'\n      case 'sleep': return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300'\n      case 'exercise': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300'\n    }\n  }\n\n  const getIntensityColor = (intensity: string) => {\n    switch (intensity) {\n      case 'low': return 'bg-green-500'\n      case 'medium': return 'bg-yellow-500'\n      case 'high': return 'bg-red-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const sortedActivities = [...petData.activities].sort((a, b) => {\n    const dateA = new Date(`${a.date} ${a.time}`).getTime()\n    const dateB = new Date(`${b.date} ${b.time}`).getTime()\n    return dateB - dateA\n  })\n\n  const todayActivities = sortedActivities.filter(\n    activity => activity.date === new Date().toISOString().split('T')[0]\n  )\n\n  const totalDurationToday = todayActivities.reduce((sum, activity) => sum + activity.duration, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Activities Log\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Track daily activities and exercise for {petData.pet.name}\n          </p>\n        </div>\n        <Dialog open={isAddingActivity} onOpenChange={setIsAddingActivity}>\n          <DialogTrigger asChild>\n            <Button>Log New Activity</Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>Log Activity</DialogTitle>\n              <DialogDescription>\n                Record a new activity for {petData.pet.name}.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"date\" className=\"text-right\">\n                  Date\n                </Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  value={newActivity.date}\n                  onChange={(e) => setNewActivity({ ...newActivity, date: e.target.value })}\n                  className=\"col-span-3\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"time\" className=\"text-right\">\n                  Time\n                </Label>\n                <Input\n                  id=\"time\"\n                  type=\"time\"\n                  value={newActivity.time}\n                  onChange={(e) => setNewActivity({ ...newActivity, time: e.target.value })}\n                  className=\"col-span-3\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"type\" className=\"text-right\">\n                  Type\n                </Label>\n                <Select\n                  value={newActivity.type}\n                  onValueChange={(value: any) => setNewActivity({ ...newActivity, type: value })}\n                >\n                  <SelectTrigger className=\"col-span-3\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"walk\">Walk</SelectItem>\n                    <SelectItem value=\"play\">Play</SelectItem>\n                    <SelectItem value=\"eat\">Eat</SelectItem>\n                    <SelectItem value=\"sleep\">Sleep</SelectItem>\n                    <SelectItem value=\"exercise\">Exercise</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"duration\" className=\"text-right\">\n                  Duration (min)\n                </Label>\n                <Input\n                  id=\"duration\"\n                  type=\"number\"\n                  value={newActivity.duration}\n                  onChange={(e) => setNewActivity({ ...newActivity, duration: parseInt(e.target.value) || 0 })}\n                  className=\"col-span-3\"\n                  min=\"1\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"intensity\" className=\"text-right\">\n                  Intensity\n                </Label>\n                <Select\n                  value={newActivity.intensity}\n                  onValueChange={(value: any) => setNewActivity({ ...newActivity, intensity: value })}\n                >\n                  <SelectTrigger className=\"col-span-3\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"low\">Low</SelectItem>\n                    <SelectItem value=\"medium\">Medium</SelectItem>\n                    <SelectItem value=\"high\">High</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"notes\" className=\"text-right\">\n                  Notes\n                </Label>\n                <Textarea\n                  id=\"notes\"\n                  value={newActivity.notes}\n                  onChange={(e) => setNewActivity({ ...newActivity, notes: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Additional notes (optional)\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={() => setIsAddingActivity(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAddActivity}>Log Activity</Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Today's Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Today's Activity Summary</CardTitle>\n          <CardDescription>\n            {new Date().toLocaleDateString()} - {todayActivities.length} activities logged\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {todayActivities.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Activities\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {totalDurationToday}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Minutes Active\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {todayActivities.filter(a => a.type === 'walk').length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Walks\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {todayActivities.filter(a => a.type === 'play').length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Play Sessions\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Activities List */}\n      <div className=\"space-y-4\">\n        {sortedActivities.length === 0 ? (\n          <Card>\n            <CardContent className=\"text-center py-8\">\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                No activities logged yet. Start tracking {petData.pet.name}'s activities!\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          sortedActivities.map((activity) => (\n            <Card key={activity.id}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg flex items-center space-x-2\">\n                    <Badge className={getActivityColor(activity.type)}>\n                      {activity.type.charAt(0).toUpperCase() + activity.type.slice(1)}\n                    </Badge>\n                    <span>{activity.duration} minutes</span>\n                  </CardTitle>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"flex items-center space-x-1\">\n                      <div className={`w-2 h-2 rounded-full ${getIntensityColor(activity.intensity)}`}></div>\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400 capitalize\">\n                        {activity.intensity}\n                      </span>\n                    </div>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {new Date(activity.date).toLocaleDateString()} at {activity.time}\n                    </span>\n                  </div>\n                </div>\n              </CardHeader>\n              {activity.notes && (\n                <CardContent>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    {activity.notes}\n                  </p>\n                </CardContent>\n              )}\n            </Card>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3455, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 3497, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Medications.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Badge } from '@/components/ui/badge'\nimport { Switch } from '@/components/ui/switch'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\n\nexport default function Medications() {\n  const { petData, dispatch } = usePetData()\n  const [isAddingMedication, setIsAddingMedication] = useState(false)\n  const [newMedication, setNewMedication] = useState({\n    name: '',\n    dosage: '',\n    frequency: '',\n    startDate: new Date().toISOString().split('T')[0],\n    endDate: '',\n    prescribedBy: '',\n    notes: '',\n    active: true\n  })\n\n  const handleAddMedication = () => {\n    if (newMedication.name.trim() && newMedication.dosage.trim() && newMedication.frequency.trim()) {\n      dispatch({\n        type: 'ADD_MEDICATION',\n        payload: {\n          id: Date.now().toString(),\n          ...newMedication\n        }\n      })\n      setNewMedication({\n        name: '',\n        dosage: '',\n        frequency: '',\n        startDate: new Date().toISOString().split('T')[0],\n        endDate: '',\n        prescribedBy: '',\n        notes: '',\n        active: true\n      })\n      setIsAddingMedication(false)\n    }\n  }\n\n  const toggleMedicationStatus = (id: string, active: boolean) => {\n    dispatch({\n      type: 'UPDATE_MEDICATION',\n      payload: {\n        id,\n        updates: { active }\n      }\n    })\n  }\n\n  const activeMedications = petData.medications.filter(med => med.active)\n  const inactiveMedications = petData.medications.filter(med => !med.active)\n\n  const isExpiringSoon = (medication: any) => {\n    if (!medication.endDate) return false\n    const endDate = new Date(medication.endDate)\n    const today = new Date()\n    const daysUntilExpiry = Math.ceil((endDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n    return daysUntilExpiry <= 7 && daysUntilExpiry > 0\n  }\n\n  const isExpired = (medication: any) => {\n    if (!medication.endDate) return false\n    const endDate = new Date(medication.endDate)\n    const today = new Date()\n    return endDate < today\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Medications\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Manage {petData.pet.name}'s current and past medications\n          </p>\n        </div>\n        <Dialog open={isAddingMedication} onOpenChange={setIsAddingMedication}>\n          <DialogTrigger asChild>\n            <Button>Add Medication</Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>Add Medication</DialogTitle>\n              <DialogDescription>\n                Add a new medication for {petData.pet.name}.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"name\" className=\"text-right\">\n                  Name\n                </Label>\n                <Input\n                  id=\"name\"\n                  value={newMedication.name}\n                  onChange={(e) => setNewMedication({ ...newMedication, name: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Medication name\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"dosage\" className=\"text-right\">\n                  Dosage\n                </Label>\n                <Input\n                  id=\"dosage\"\n                  value={newMedication.dosage}\n                  onChange={(e) => setNewMedication({ ...newMedication, dosage: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"e.g., 1 tablet, 5ml\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"frequency\" className=\"text-right\">\n                  Frequency\n                </Label>\n                <Input\n                  id=\"frequency\"\n                  value={newMedication.frequency}\n                  onChange={(e) => setNewMedication({ ...newMedication, frequency: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"e.g., Twice daily, Weekly\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"startDate\" className=\"text-right\">\n                  Start Date\n                </Label>\n                <Input\n                  id=\"startDate\"\n                  type=\"date\"\n                  value={newMedication.startDate}\n                  onChange={(e) => setNewMedication({ ...newMedication, startDate: e.target.value })}\n                  className=\"col-span-3\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"endDate\" className=\"text-right\">\n                  End Date\n                </Label>\n                <Input\n                  id=\"endDate\"\n                  type=\"date\"\n                  value={newMedication.endDate}\n                  onChange={(e) => setNewMedication({ ...newMedication, endDate: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Optional\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"prescribedBy\" className=\"text-right\">\n                  Prescribed By\n                </Label>\n                <Input\n                  id=\"prescribedBy\"\n                  value={newMedication.prescribedBy}\n                  onChange={(e) => setNewMedication({ ...newMedication, prescribedBy: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Dr. Name\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"notes\" className=\"text-right\">\n                  Notes\n                </Label>\n                <Textarea\n                  id=\"notes\"\n                  value={newMedication.notes}\n                  onChange={(e) => setNewMedication({ ...newMedication, notes: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Additional instructions (optional)\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={() => setIsAddingMedication(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAddMedication}>Add Medication</Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Medication Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Medication Summary</CardTitle>\n          <CardDescription>Current medication status overview</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                {activeMedications.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Active Medications\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">\n                {activeMedications.filter(med => isExpiringSoon(med)).length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Expiring Soon\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n                {activeMedications.filter(med => isExpired(med)).length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Expired\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-600 dark:text-gray-400\">\n                {inactiveMedications.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Inactive\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Active Medications */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n          Active Medications\n        </h2>\n        {activeMedications.length === 0 ? (\n          <Card>\n            <CardContent className=\"text-center py-8\">\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                No active medications. Add a medication to get started.\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          activeMedications.map((medication) => (\n            <Card key={medication.id}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg flex items-center space-x-2\">\n                    <span>{medication.name}</span>\n                    {isExpired(medication) && (\n                      <Badge variant=\"destructive\">Expired</Badge>\n                    )}\n                    {isExpiringSoon(medication) && !isExpired(medication) && (\n                      <Badge className=\"bg-yellow-500 text-white\">Expiring Soon</Badge>\n                    )}\n                  </CardTitle>\n                  <div className=\"flex items-center space-x-2\">\n                    <Label htmlFor={`active-${medication.id}`} className=\"text-sm\">\n                      Active\n                    </Label>\n                    <Switch\n                      id={`active-${medication.id}`}\n                      checked={medication.active}\n                      onCheckedChange={(checked) => toggleMedicationStatus(medication.id, checked)}\n                    />\n                  </div>\n                </div>\n                <CardDescription>\n                  {medication.dosage} - {medication.frequency}\n                  {medication.prescribedBy && ` • Prescribed by ${medication.prescribedBy}`}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      <strong>Start Date:</strong> {new Date(medication.startDate).toLocaleDateString()}\n                    </p>\n                    {medication.endDate && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        <strong>End Date:</strong> {new Date(medication.endDate).toLocaleDateString()}\n                      </p>\n                    )}\n                  </div>\n                  {medication.notes && (\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        <strong>Notes:</strong> {medication.notes}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* Inactive Medications */}\n      {inactiveMedications.length > 0 && (\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n            Inactive Medications\n          </h2>\n          {inactiveMedications.map((medication) => (\n            <Card key={medication.id} className=\"opacity-75\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg flex items-center space-x-2\">\n                    <span>{medication.name}</span>\n                    <Badge variant=\"secondary\">Inactive</Badge>\n                  </CardTitle>\n                  <div className=\"flex items-center space-x-2\">\n                    <Label htmlFor={`active-${medication.id}`} className=\"text-sm\">\n                      Active\n                    </Label>\n                    <Switch\n                      id={`active-${medication.id}`}\n                      checked={medication.active}\n                      onCheckedChange={(checked) => toggleMedicationStatus(medication.id, checked)}\n                    />\n                  </div>\n                </div>\n                <CardDescription>\n                  {medication.dosage} - {medication.frequency}\n                  {medication.prescribedBy && ` • Prescribed by ${medication.prescribedBy}`}\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4434, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/OrderMedicine.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { toast } from 'sonner'\n\nexport default function OrderMedicine() {\n  const { petData } = usePetData()\n  const [orderingId, setOrderingId] = useState<string | null>(null)\n\n  const activeMedications = petData.medications.filter(med => med.active)\n\n  const handleOrder = (medId: string, medName: string) => {\n    setOrderingId(medId)\n    // Simulate order processing delay\n    setTimeout(() => {\n      setOrderingId(null)\n      toast.success(`Order placed successfully for ${medName}`)\n    }, 1500)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n        Order Prescribed Medicine\n      </h1>\n      <p className=\"text-gray-600 dark:text-gray-400\">\n        Order medicines prescribed for your pet {petData.pet.name}.\n      </p>\n\n      {activeMedications.length === 0 ? (\n        <p className=\"text-gray-500 dark:text-gray-400\">\n          No active medications to order.\n        </p>\n      ) : (\n        <div className=\"space-y-4\">\n          {activeMedications.map((med) => (\n            <Card key={med.id}>\n              <CardHeader>\n                <CardTitle>{med.name}</CardTitle>\n              </CardHeader>\n              <CardContent className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    Dosage: {med.dosage}\n                  </p>\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    Frequency: {med.frequency}\n                  </p>\n                </div>\n                <Button\n                  onClick={() => handleOrder(med.id, med.name)}\n                  disabled={orderingId === med.id}\n                >\n                  {orderingId === med.id ? 'Ordering...' : 'Order'}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;IAC7B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,MAAM,oBAAoB,QAAQ,WAAW,CAAC,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM;IAEtE,MAAM,cAAc,CAAC,OAAe;QAClC,cAAc;QACd,kCAAkC;QAClC,WAAW;YACT,cAAc;YACd,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,CAAC,8BAA8B,EAAE,SAAS;QAC1D,GAAG;IACL;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAmD;;;;;;0BAGjE,6LAAC;gBAAE,WAAU;;oBAAmC;oBACL,QAAQ,GAAG,CAAC,IAAI;oBAAC;;;;;;;YAG3D,kBAAkB,MAAM,KAAK,kBAC5B,6LAAC;gBAAE,WAAU;0BAAmC;;;;;qCAIhD,6LAAC;gBAAI,WAAU;0BACZ,kBAAkB,GAAG,CAAC,CAAC,oBACtB,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;0CACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8CAAE,IAAI,IAAI;;;;;;;;;;;0CAEtB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;;oDAA2C;oDAC7C,IAAI,MAAM;;;;;;;0DAErB,6LAAC;gDAAE,WAAU;;oDAA2C;oDAC1C,IAAI,SAAS;;;;;;;;;;;;;kDAG7B,6LAAC,qIAAA,CAAA,SAAM;wCACL,SAAS,IAAM,YAAY,IAAI,EAAE,EAAE,IAAI,IAAI;wCAC3C,UAAU,eAAe,IAAI,EAAE;kDAE9B,eAAe,IAAI,EAAE,GAAG,gBAAgB;;;;;;;;;;;;;uBAjBpC,IAAI,EAAE;;;;;;;;;;;;;;;;AA0B7B;GAzDwB;;QACF,oIAAA,CAAA,aAAU;;;KADR","debugId":null}},
    {"offset": {"line": 4594, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BehaviorChangesDashboard.tsx"],"sourcesContent":["'use client'\n\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\n\nexport default function BehaviorChangesDashboard() {\n  const { petData } = usePetData()\n\n  // Filter behavior type health records\n  const behaviorRecords = petData.healthRecords.filter(record => record.type === 'behavior')\n\n  // Count occurrences of each symptom\n  const symptomCounts: Record<string, number> = {}\n\n  behaviorRecords.forEach(record => {\n    const symptoms = record.description.split(',').map(s => s.trim())\n    symptoms.forEach(symptom => {\n      if (symptom) {\n        symptomCounts[symptom] = (symptomCounts[symptom] || 0) + 1\n      }\n    })\n  })\n\n  const symptoms = Object.entries(symptomCounts).sort((a, b) => b[1] - a[1])\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n        Behavior Changes Summary\n      </h1>\n      {symptoms.length === 0 ? (\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          No behavioral changes recorded yet.\n        </p>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {symptoms.map(([symptom, count]) => (\n            <Card key={symptom}>\n              <CardHeader>\n                <CardTitle>{symptom}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700 dark:text-gray-300\">\n                  Reported {count} time{count > 1 ? 's' : ''}\n                </p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;IAE7B,sCAAsC;IACtC,MAAM,kBAAkB,QAAQ,aAAa,CAAC,MAAM,CAAC,CAAA,SAAU,OAAO,IAAI,KAAK;IAE/E,oCAAoC;IACpC,MAAM,gBAAwC,CAAC;IAE/C,gBAAgB,OAAO,CAAC,CAAA;QACtB,MAAM,WAAW,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QAC9D,SAAS,OAAO,CAAC,CAAA;YACf,IAAI,SAAS;gBACX,aAAa,CAAC,QAAQ,GAAG,CAAC,aAAa,CAAC,QAAQ,IAAI,CAAC,IAAI;YAC3D;QACF;IACF;IAEA,MAAM,WAAW,OAAO,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAEzE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAmD;;;;;;YAGhE,SAAS,MAAM,KAAK,kBACnB,6LAAC;gBAAE,WAAU;0BAAmC;;;;;qCAIhD,6LAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,MAAM,iBAC7B,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;0CACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8CAAE;;;;;;;;;;;0CAEd,6LAAC,mIAAA,CAAA,cAAW;0CACV,cAAA,6LAAC;oCAAE,WAAU;;wCAAmC;wCACpC;wCAAM;wCAAM,QAAQ,IAAI,MAAM;;;;;;;;;;;;;uBANnC;;;;;;;;;;;;;;;;AAevB;GA/CwB;;QACF,oIAAA,CAAA,aAAU;;;KADR","debugId":null}},
    {"offset": {"line": 4710, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Vaccinations.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\n\nexport default function Vaccinations() {\n  const { petData, dispatch } = usePetData()\n  const [isAddingVaccination, setIsAddingVaccination] = useState(false)\n  const [newVaccination, setNewVaccination] = useState({\n    vaccineName: '',\n    dateGiven: new Date().toISOString().split('T')[0],\n    nextDue: '',\n    veterinarian: '',\n    batchNumber: '',\n    notes: ''\n  })\n\n  const handleAddVaccination = () => {\n    if (newVaccination.vaccineName.trim() && newVaccination.dateGiven) {\n      dispatch({\n        type: 'ADD_VACCINATION',\n        payload: {\n          id: Date.now().toString(),\n          ...newVaccination\n        }\n      })\n      setNewVaccination({\n        vaccineName: '',\n        dateGiven: new Date().toISOString().split('T')[0],\n        nextDue: '',\n        veterinarian: '',\n        batchNumber: '',\n        notes: ''\n      })\n      setIsAddingVaccination(false)\n    }\n  }\n\n  const isDueForVaccination = (vaccination: any) => {\n    if (!vaccination.nextDue) return false\n    const dueDate = new Date(vaccination.nextDue)\n    const today = new Date()\n    const daysUntilDue = Math.ceil((dueDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n    return daysUntilDue <= 30 && daysUntilDue > 0\n  }\n\n  const isOverdue = (vaccination: any) => {\n    if (!vaccination.nextDue) return false\n    const dueDate = new Date(vaccination.nextDue)\n    const today = new Date()\n    return dueDate < today\n  }\n\n  const sortedVaccinations = [...petData.vaccinations].sort((a, b) => \n    new Date(b.dateGiven).getTime() - new Date(a.dateGiven).getTime()\n  )\n\n  const upcomingVaccinations = sortedVaccinations.filter(v => isDueForVaccination(v))\n  const overdueVaccinations = sortedVaccinations.filter(v => isOverdue(v))\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Vaccinations\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Track {petData.pet.name}'s vaccination history and upcoming reminders\n          </p>\n        </div>\n        <Dialog open={isAddingVaccination} onOpenChange={setIsAddingVaccination}>\n          <DialogTrigger asChild>\n            <Button>Add Vaccination</Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>Add Vaccination Record</DialogTitle>\n              <DialogDescription>\n                Record a vaccination for {petData.pet.name}.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"vaccineName\" className=\"text-right\">\n                  Vaccine Name\n                </Label>\n                <Input\n                  id=\"vaccineName\"\n                  value={newVaccination.vaccineName}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, vaccineName: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"e.g., DHPP, Rabies\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"dateGiven\" className=\"text-right\">\n                  Date Given\n                </Label>\n                <Input\n                  id=\"dateGiven\"\n                  type=\"date\"\n                  value={newVaccination.dateGiven}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, dateGiven: e.target.value })}\n                  className=\"col-span-3\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"nextDue\" className=\"text-right\">\n                  Next Due\n                </Label>\n                <Input\n                  id=\"nextDue\"\n                  type=\"date\"\n                  value={newVaccination.nextDue}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, nextDue: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Optional\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"veterinarian\" className=\"text-right\">\n                  Veterinarian\n                </Label>\n                <Input\n                  id=\"veterinarian\"\n                  value={newVaccination.veterinarian}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, veterinarian: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Dr. Name\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"batchNumber\" className=\"text-right\">\n                  Batch Number\n                </Label>\n                <Input\n                  id=\"batchNumber\"\n                  value={newVaccination.batchNumber}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, batchNumber: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Optional\"\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"notes\" className=\"text-right\">\n                  Notes\n                </Label>\n                <Textarea\n                  id=\"notes\"\n                  value={newVaccination.notes}\n                  onChange={(e) => setNewVaccination({ ...newVaccination, notes: e.target.value })}\n                  className=\"col-span-3\"\n                  placeholder=\"Additional notes (optional)\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={() => setIsAddingVaccination(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAddVaccination}>Add Vaccination</Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Vaccination Status Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Vaccination Status</CardTitle>\n          <CardDescription>Current vaccination status overview</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                {petData.vaccinations.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Total Vaccinations\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                {petData.vaccinations.filter(v => v.nextDue && new Date(v.nextDue) > new Date()).length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Up to Date\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">\n                {upcomingVaccinations.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Due Soon\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n                {overdueVaccinations.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Overdue\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Overdue Vaccinations Alert */}\n      {overdueVaccinations.length > 0 && (\n        <Card className=\"border-red-200 dark:border-red-800\">\n          <CardHeader>\n            <CardTitle className=\"text-red-600 dark:text-red-400\">\n              Overdue Vaccinations\n            </CardTitle>\n            <CardDescription>\n              These vaccinations are past their due date and need immediate attention.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {overdueVaccinations.map((vaccination) => (\n                <div key={vaccination.id} className=\"flex items-center justify-between p-3 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-red-800 dark:text-red-200\">\n                      {vaccination.vaccineName}\n                    </p>\n                      <p className=\"text-sm text-red-600 dark:text-red-400\">\n                        Due: {vaccination.nextDue ? new Date(vaccination.nextDue).toLocaleDateString('en-IN') : 'Not specified'}\n                      </p>\n                  </div>\n                  <Badge variant=\"destructive\">Overdue</Badge>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Upcoming Vaccinations */}\n      {upcomingVaccinations.length > 0 && (\n        <Card className=\"border-yellow-200 dark:border-yellow-800\">\n          <CardHeader>\n            <CardTitle className=\"text-yellow-600 dark:text-yellow-400\">\n              Upcoming Vaccinations\n            </CardTitle>\n            <CardDescription>\n              These vaccinations are due within the next 30 days.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {upcomingVaccinations.map((vaccination) => (\n                <div key={vaccination.id} className=\"flex items-center justify-between p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-yellow-800 dark:text-yellow-200\">\n                      {vaccination.vaccineName}\n                    </p>\n                      <p className=\"text-sm text-yellow-600 dark:text-yellow-400\">\n                        Due: {vaccination.nextDue ? new Date(vaccination.nextDue).toLocaleDateString('en-IN') : 'Not specified'}\n                      </p>\n                  </div>\n                  <Badge className=\"bg-yellow-500 text-white\">Due Soon</Badge>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Vaccination History */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n          Vaccination History\n        </h2>\n        {sortedVaccinations.length === 0 ? (\n          <Card>\n            <CardContent className=\"text-center py-8\">\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                No vaccination records found. Add the first vaccination record to get started.\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          sortedVaccinations.map((vaccination) => (\n            <Card key={vaccination.id}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg flex items-center space-x-2\">\n                    <span>{vaccination.vaccineName}</span>\n                    {isOverdue(vaccination) && (\n                      <Badge variant=\"destructive\">Overdue</Badge>\n                    )}\n                    {isDueForVaccination(vaccination) && !isOverdue(vaccination) && (\n                      <Badge className=\"bg-yellow-500 text-white\">Due Soon</Badge>\n                    )}\n                    {vaccination.nextDue && new Date(vaccination.nextDue) > new Date() && \n                     !isDueForVaccination(vaccination) && (\n                      <Badge className=\"bg-green-500 text-white\">Up to Date</Badge>\n                    )}\n                  </CardTitle>\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Given: {new Date(vaccination.dateGiven).toLocaleDateString('en-IN')}\n                  </span>\n                </div>\n                <CardDescription>\n                  {vaccination.veterinarian && `Administered by ${vaccination.veterinarian}`}\n                  {vaccination.batchNumber && ` • Batch: ${vaccination.batchNumber}`}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    {vaccination.nextDue && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        <strong>Next Due:</strong> {new Date(vaccination.nextDue).toLocaleDateString('en-IN')}\n                      </p>\n                    )}\n                  </div>\n                  {vaccination.notes && (\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        <strong>Notes:</strong> {vaccination.notes}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5645, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/InsuranceDetails.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Badge } from '@/components/ui/badge'\n\nexport default function InsuranceDetails() {\n  const { petData, dispatch } = usePetData()\n  const [isEditing, setIsEditing] = useState(false)\n  const [editedInsurance, setEditedInsurance] = useState(petData.insurance)\n\n  const handleSave = () => {\n    dispatch({\n      type: 'UPDATE_INSURANCE',\n      payload: editedInsurance\n    })\n    setIsEditing(false)\n  }\n\n  const handleCancel = () => {\n    setEditedInsurance(petData.insurance)\n    setIsEditing(false)\n  }\n\n  const isExpiringSoon = () => {\n    const expirationDate = new Date(petData.insurance.expirationDate)\n    const today = new Date()\n    const daysUntilExpiry = Math.ceil((expirationDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n    return daysUntilExpiry <= 30 && daysUntilExpiry > 0\n  }\n\n  const isExpired = () => {\n    const expirationDate = new Date(petData.insurance.expirationDate)\n    const today = new Date()\n    return expirationDate < today\n  }\n\n  const getStatusBadge = () => {\n    if (isExpired()) {\n      return <Badge variant=\"destructive\">Expired</Badge>\n    }\n    if (isExpiringSoon()) {\n      return <Badge className=\"bg-yellow-500 text-white\">Expiring Soon</Badge>\n    }\n    return <Badge className=\"bg-green-500 text-white\">Active</Badge>\n  }\n\n  const getDaysUntilExpiry = () => {\n    const expirationDate = new Date(petData.insurance.expirationDate)\n    const today = new Date()\n    return Math.ceil((expirationDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Insurance Details\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Manage {petData.pet.name}'s insurance policy information\n          </p>\n        </div>\n        {!isEditing ? (\n          <Button onClick={() => setIsEditing(true)}>\n            Edit Insurance\n          </Button>\n        ) : (\n          <div className=\"space-x-2\">\n            <Button variant=\"outline\" onClick={handleCancel}>\n              Cancel\n            </Button>\n            <Button onClick={handleSave}>\n              Save Changes\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Insurance Status Alert */}\n      {(isExpired() || isExpiringSoon()) && (\n        <Card className={`border-2 ${isExpired() ? 'border-red-200 dark:border-red-800' : 'border-yellow-200 dark:border-yellow-800'}`}>\n          <CardHeader>\n            <CardTitle className={`${isExpired() ? 'text-red-600 dark:text-red-400' : 'text-yellow-600 dark:text-yellow-400'}`}>\n              {isExpired() ? 'Insurance Expired' : 'Insurance Expiring Soon'}\n            </CardTitle>\n            <CardDescription>\n              {isExpired() \n                ? 'Your pet insurance policy has expired. Please renew immediately to maintain coverage.'\n                : `Your pet insurance policy expires in ${getDaysUntilExpiry()} days. Please renew soon.`\n              }\n            </CardDescription>\n          </CardHeader>\n        </Card>\n      )}\n\n      {/* Main Insurance Card */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-xl\">\n              Insurance Policy Details\n            </CardTitle>\n            {getStatusBadge()}\n          </div>\n          <CardDescription>\n            Current insurance coverage for {petData.pet.name}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {!isEditing ? (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Insurance Provider\n                  </Label>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {petData.insurance.provider}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Policy Number\n                  </Label>\n                  <p className=\"text-lg font-mono text-gray-900 dark:text-white\">\n                    {petData.insurance.policyNumber}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Coverage Type\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.insurance.coverage}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Contact Information\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.insurance.contactInfo}\n                  </p>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Expiration Date\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {new Date(petData.insurance.expirationDate).toLocaleDateString()}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Annual Deductible\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    ₹{petData.insurance.deductible.toLocaleString('en-IN')}\n                  </p>\n                </div>\n                <div>\n                <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                  Quarterly Premium\n                </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    ₹{petData.insurance.quarterlyPremium?.toLocaleString('en-IN') ?? 'N/A'}\n                  </p>\n                </div>\n              <div>\n                <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                  Annual Cost\n                </Label>\n                <p className=\"text-lg font-semibold text-blue-600 dark:text-blue-400\">\n                  ₹{petData.insurance.quarterlyPremium ? (petData.insurance.quarterlyPremium * 4).toLocaleString('en-IN') : 'N/A'}\n                </p>\n              </div>\n            </div>\n          </div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"provider\">Insurance Provider</Label>\n                  <Input\n                    id=\"provider\"\n                    value={editedInsurance.provider}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, provider: e.target.value })}\n                    placeholder=\"Insurance company name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"policyNumber\">Policy Number</Label>\n                  <Input\n                    id=\"policyNumber\"\n                    value={editedInsurance.policyNumber}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, policyNumber: e.target.value })}\n                    placeholder=\"Policy number\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"coverage\">Coverage Type</Label>\n                  <Input\n                    id=\"coverage\"\n                    value={editedInsurance.coverage}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, coverage: e.target.value })}\n                    placeholder=\"e.g., Comprehensive, Basic\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"contactInfo\">Contact Information</Label>\n                  <Input\n                    id=\"contactInfo\"\n                    value={editedInsurance.contactInfo}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, contactInfo: e.target.value })}\n                    placeholder=\"Phone number or website\"\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"expirationDate\">Expiration Date</Label>\n                  <Input\n                    id=\"expirationDate\"\n                    type=\"date\"\n                    value={editedInsurance.expirationDate}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, expirationDate: e.target.value })}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"deductible\">Annual Deductible (₹)</Label>\n                  <Input\n                    id=\"deductible\"\n                    type=\"number\"\n                    value={editedInsurance.deductible}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, deductible: parseFloat(e.target.value) || 0 })}\n                    placeholder=\"Annual deductible amount\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"quarterlyPremium\">Quarterly Premium (₹)</Label>\n                  <Input\n                    id=\"quarterlyPremium\"\n                    type=\"number\"\n                    value={editedInsurance.quarterlyPremium}\n                    onChange={(e) => setEditedInsurance({ ...editedInsurance, quarterlyPremium: parseFloat(e.target.value) || 0 })}\n                    placeholder=\"Quarterly premium amount\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Estimated Annual Cost\n                  </Label>\n                  <p className=\"text-lg font-semibold text-blue-600 dark:text-blue-400\">\n                    ₹{(editedInsurance.quarterlyPremium * 4).toLocaleString()}\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Insurance Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Insurance Summary</CardTitle>\n          <CardDescription>Key insurance metrics and information</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n            <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n              ₹{petData.insurance.quarterlyPremium?.toLocaleString('en-IN') ?? 'N/A'}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Quarterly Premium\n            </div>\n          </div>\n          <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n            <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n              ₹{petData.insurance.deductible.toLocaleString('en-IN')}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Annual Deductible\n            </div>\n          </div>\n          <div className=\"text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n            <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n              ₹{petData.insurance.quarterlyPremium ? (petData.insurance.quarterlyPremium * 4).toLocaleString('en-IN') : 'N/A'}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Annual Cost\n            </div>\n          </div>\n            <div className=\"text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-orange-600 dark:text-orange-400\">\n                {Math.abs(getDaysUntilExpiry())}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {getDaysUntilExpiry() > 0 ? 'Days Until Expiry' : 'Days Expired'}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n          <CardDescription>Common insurance-related tasks</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n              <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                File a Claim\n              </h3>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\n                Submit a new insurance claim for veterinary expenses.\n              </p>\n              <Button variant=\"outline\" className=\"w-full\">\n                Start Claim Process\n              </Button>\n            </div>\n            <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n              <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                Contact Insurance\n              </h3>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\n                Get in touch with your insurance provider for questions or support.\n              </p>\n              <Button variant=\"outline\" className=\"w-full\">\n                Contact {petData.insurance.provider}\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6661, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/PetProfile.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePetData } from '@/context/PetDataContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\n\nexport default function PetProfile() {\n  const { petData, dispatch } = usePetData()\n  const [isEditingPet, setIsEditingPet] = useState(false)\n  const [isEditingOwner, setIsEditingOwner] = useState(false)\n  const [editedPet, setEditedPet] = useState(petData.pet)\n  const [editedOwner, setEditedOwner] = useState(petData.pet.owner)\n\n  const handleSavePet = () => {\n    dispatch({\n      type: 'UPDATE_PET',\n      payload: editedPet\n    })\n    setIsEditingPet(false)\n  }\n\n  const handleCancelPet = () => {\n    setEditedPet(petData.pet)\n    setIsEditingPet(false)\n  }\n\n  const handleSaveOwner = () => {\n    dispatch({\n      type: 'UPDATE_PET',\n      payload: { owner: editedOwner }\n    })\n    setIsEditingOwner(false)\n  }\n\n  const handleCancelOwner = () => {\n    setEditedOwner(petData.pet.owner)\n    setIsEditingOwner(false)\n  }\n\n  const getAgeCategory = (age: number) => {\n    if (age < 1) return { category: 'Puppy/Kitten', color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' }\n    if (age < 3) return { category: 'Young', color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300' }\n    if (age < 7) return { category: 'Adult', color: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300' }\n    return { category: 'Senior', color: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300' }\n  }\n\n  const ageInfo = getAgeCategory(petData.pet.age)\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n          Pet Profile\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n          Manage {petData.pet.name}'s basic information and owner details\n        </p>\n      </div>\n\n      {/* Pet Information Card */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-xl flex items-center space-x-2\">\n                <span>{petData.pet.name}</span>\n                <Badge className={ageInfo.color}>\n                  {ageInfo.category}\n                </Badge>\n              </CardTitle>\n              <CardDescription>\n                {petData.pet.breed} • {petData.pet.type === 'dog' ? 'Dog' : 'Cat'} • {petData.pet.age} years old\n              </CardDescription>\n            </div>\n            {!isEditingPet ? (\n              <Button onClick={() => setIsEditingPet(true)}>\n                Edit Pet Info\n              </Button>\n            ) : (\n              <div className=\"space-x-2\">\n                <Button variant=\"outline\" onClick={handleCancelPet}>\n                  Cancel\n                </Button>\n                <Button onClick={handleSavePet}>\n                  Save Changes\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent>\n          {!isEditingPet ? (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Pet Name\n                  </Label>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {petData.pet.name}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Type\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white capitalize\">\n                    {petData.pet.type}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Breed\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.breed}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Color\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.color}\n                  </p>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Age\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.age} years old\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Weight\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.weight} lbs\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Microchip ID\n                  </Label>\n                  <p className=\"text-lg font-mono text-gray-900 dark:text-white\">\n                    {petData.pet.microchipId}\n                  </p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"petName\">Pet Name</Label>\n                  <Input\n                    id=\"petName\"\n                    value={editedPet.name}\n                    onChange={(e) => setEditedPet({ ...editedPet, name: e.target.value })}\n                    placeholder=\"Pet's name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"petType\">Type</Label>\n                  <Select\n                    value={editedPet.type}\n                    onValueChange={(value: 'dog' | 'cat') => setEditedPet({ ...editedPet, type: value })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"dog\">Dog</SelectItem>\n                      <SelectItem value=\"cat\">Cat</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"breed\">Breed</Label>\n                  <Input\n                    id=\"breed\"\n                    value={editedPet.breed}\n                    onChange={(e) => setEditedPet({ ...editedPet, breed: e.target.value })}\n                    placeholder=\"Pet's breed\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"color\">Color</Label>\n                  <Input\n                    id=\"color\"\n                    value={editedPet.color}\n                    onChange={(e) => setEditedPet({ ...editedPet, color: e.target.value })}\n                    placeholder=\"Pet's color\"\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"age\">Age (years)</Label>\n                  <Input\n                    id=\"age\"\n                    type=\"number\"\n                    value={editedPet.age}\n                    onChange={(e) => setEditedPet({ ...editedPet, age: parseInt(e.target.value) || 0 })}\n                    placeholder=\"Pet's age\"\n                    min=\"0\"\n                    max=\"30\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"weight\">Weight (lbs)</Label>\n                  <Input\n                    id=\"weight\"\n                    type=\"number\"\n                    value={editedPet.weight}\n                    onChange={(e) => setEditedPet({ ...editedPet, weight: parseFloat(e.target.value) || 0 })}\n                    placeholder=\"Pet's weight\"\n                    min=\"0\"\n                    step=\"0.1\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"microchipId\">Microchip ID</Label>\n                  <Input\n                    id=\"microchipId\"\n                    value={editedPet.microchipId}\n                    onChange={(e) => setEditedPet({ ...editedPet, microchipId: e.target.value })}\n                    placeholder=\"Microchip identification number\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Owner Information Card */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-xl\">Owner Information</CardTitle>\n            {!isEditingOwner ? (\n              <Button onClick={() => setIsEditingOwner(true)}>\n                Edit Owner Info\n              </Button>\n            ) : (\n              <div className=\"space-x-2\">\n                <Button variant=\"outline\" onClick={handleCancelOwner}>\n                  Cancel\n                </Button>\n                <Button onClick={handleSaveOwner}>\n                  Save Changes\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent>\n          {!isEditingOwner ? (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Owner Name\n                  </Label>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {petData.pet.owner.name}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Phone Number\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.owner.phone}\n                  </p>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                    Email Address\n                  </Label>\n                  <p className=\"text-lg text-gray-900 dark:text-white\">\n                    {petData.pet.owner.email}\n                  </p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"ownerName\">Owner Name</Label>\n                  <Input\n                    id=\"ownerName\"\n                    value={editedOwner.name}\n                    onChange={(e) => setEditedOwner({ ...editedOwner, name: e.target.value })}\n                    placeholder=\"Owner's full name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <Input\n                    id=\"phone\"\n                    value={editedOwner.phone}\n                    onChange={(e) => setEditedOwner({ ...editedOwner, phone: e.target.value })}\n                    placeholder=\"Phone number\"\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={editedOwner.email}\n                    onChange={(e) => setEditedOwner({ ...editedOwner, email: e.target.value })}\n                    placeholder=\"Email address\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Pet Statistics */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Pet Statistics</CardTitle>\n          <CardDescription>Overview of {petData.pet.name}'s records and data</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                {petData.healthRecords.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Health Records\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                {petData.activities.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Activities Logged\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n                {petData.medications.filter(m => m.active).length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Active Medications\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg\">\n              <div className=\"text-2xl font-bold text-orange-600 dark:text-orange-400\">\n                {petData.vaccinations.length}\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Vaccinations\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Quick Facts */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Facts</CardTitle>\n          <CardDescription>Key information about {petData.pet.name}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Pet ID</span>\n                <span className=\"text-sm font-mono\">{petData.pet.id}</span>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Age Category</span>\n                <Badge className={ageInfo.color}>{ageInfo.category}</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Total Records</span>\n                <span className=\"text-sm font-semibold\">\n                  {petData.healthRecords.length + petData.activities.length + petData.medications.length + petData.vaccinations.length}\n                </span>\n              </div>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Insurance Status</span>\n                <Badge className=\"bg-green-500 text-white\">Covered</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Microchipped</span>\n                <Badge className=\"bg-blue-500 text-white\">Yes</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <span className=\"text-sm font-medium\">Smart Tag</span>\n                <Badge className=\"bg-green-500 text-white\">Connected</Badge>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8012, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CustomerService.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\n\nexport default function CustomerService() {\n  // Form state\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  })\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState('')\n\n  // Update form values\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value })\n  }\n\n  // Validate form fields and submit the form\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setSuccess('')\n\n    // Simple validation\n    if (!form.name || !form.email || !form.subject || !form.message) {\n      setError('All fields are required.')\n      return\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(form.email)) {\n      setError('Please enter a valid email address.')\n      return\n    }\n\n    setLoading(true)\n    try {\n      const res = await fetch('/api/support', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      })\n      \n      if (!res.ok) {\n        throw new Error('Failed to send message. Please try again later.')\n      }\n      \n      setSuccess('Your message has been sent successfully! We will get back to you within 24 hours.')\n      // Clear form after successful submission\n      setForm({ name: '', email: '', subject: '', message: '' })\n    } catch (err: any) {\n      setError(err.message || 'An error occurred. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Dummy data for nearby veterinary clinics\n  const dummyClinics = [\n    {\n      name: 'Happy Paws Veterinary Clinic',\n      address: '123 Pet Street, Cityville, CA 90210',\n      phone: '(555) 123-4567',\n      distance: '1.2 miles',\n      hours: 'Mon-Fri: 8AM-6PM, Sat: 9AM-4PM',\n      specialties: ['General Care', 'Surgery', 'Emergency']\n    },\n    {\n      name: 'Animal Care Center',\n      address: '456 Paw Avenue, Townsville, CA 90211',\n      phone: '(555) 567-8901',\n      distance: '2.5 miles',\n      hours: 'Mon-Sun: 7AM-8PM',\n      specialties: ['24/7 Emergency', 'Dental', 'Cardiology']\n    },\n    {\n      name: 'Healthy Tails Veterinary Hospital',\n      address: '789 Furry Road, Village, CA 90212',\n      phone: '(555) 901-2345',\n      distance: '3.0 miles',\n      hours: 'Mon-Fri: 7AM-7PM, Weekends: 8AM-5PM',\n      specialties: ['Exotic Pets', 'Oncology', 'Rehabilitation']\n    },\n    {\n      name: 'Pet Wellness Clinic',\n      address: '321 Animal Lane, Pettown, CA 90213',\n      phone: '(555) 234-5678',\n      distance: '3.8 miles',\n      hours: 'Mon-Sat: 8AM-6PM',\n      specialties: ['Preventive Care', 'Grooming', 'Nutrition']\n    }\n  ]\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Customer Service</h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Get help with your Pet ProTech device or find nearby veterinary clinics for your pet's care.\n        </p>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        {/* Contact Support Form */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-xl\">Contact Support</CardTitle>\n            <CardDescription>\n              Having issues with your Pet ProTech device? Send us a message and we'll help you out.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {error && (\n              <div className=\"mb-4 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n                <p className=\"text-red-600 dark:text-red-400 text-sm\">{error}</p>\n              </div>\n            )}\n            {success && (\n              <div className=\"mb-4 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md\">\n                <p className=\"text-green-600 dark:text-green-400 text-sm\">{success}</p>\n              </div>\n            )}\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"name\">Full Name</Label>\n                  <Input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    value={form.name}\n                    onChange={handleChange}\n                    placeholder=\"Your full name\"\n                    className=\"mt-1\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={form.email}\n                    onChange={handleChange}\n                    placeholder=\"you@example.com\"\n                    className=\"mt-1\"\n                  />\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"subject\">Subject</Label>\n                <Input\n                  id=\"subject\"\n                  name=\"subject\"\n                  type=\"text\"\n                  value={form.subject}\n                  onChange={handleChange}\n                  placeholder=\"Brief description of your issue\"\n                  className=\"mt-1\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"message\">Message</Label>\n                <Textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={form.message}\n                  onChange={handleChange}\n                  placeholder=\"Please describe your issue or question in detail...\"\n                  className=\"mt-1 min-h-[120px]\"\n                />\n              </div>\n              <Button\n                type=\"submit\"\n                disabled={loading}\n                className=\"w-full\"\n              >\n                {loading ? 'Sending Message...' : 'Send Message'}\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n\n        {/* Quick Help Section */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-xl\">Quick Help</CardTitle>\n            <CardDescription>\n              Common questions and helpful resources\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-3\">\n              <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-1\">Device Setup</h4>\n                <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                  Need help setting up your Pet ProTech device? Check our setup guide or contact support.\n                </p>\n              </div>\n              <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                <h4 className=\"font-medium text-green-900 dark:text-green-100 mb-1\">Health Monitoring</h4>\n                <p className=\"text-sm text-green-700 dark:text-green-300\">\n                  Questions about health readings or alerts? Our support team can help interpret the data.\n                </p>\n              </div>\n              <div className=\"p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n                <h4 className=\"font-medium text-purple-900 dark:text-purple-100 mb-1\">Technical Issues</h4>\n                <p className=\"text-sm text-purple-700 dark:text-purple-300\">\n                  Device not working properly? We're here to troubleshoot and resolve any technical problems.\n                </p>\n              </div>\n            </div>\n            <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                <strong>Support Hours:</strong> Monday - Friday, 8AM - 6PM PST\n              </p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                <strong>Emergency Support:</strong> Available 24/7 for critical pet health alerts\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Nearby Veterinary Clinics Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-xl\">Nearby Veterinary Clinics</CardTitle>\n          <CardDescription>\n            Find trusted veterinary care near you for your pet's health needs\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {dummyClinics.map((clinic, index) => (\n              <div key={index} className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">{clinic.name}</h3>\n                  <span className=\"text-sm text-blue-600 dark:text-blue-400 font-medium\">{clinic.distance}</span>\n                </div>\n                <div className=\"space-y-2 text-sm text-gray-600 dark:text-gray-400\">\n                  <p className=\"flex items-start\">\n                    <span className=\"font-medium mr-2\">Address:</span>\n                    {clinic.address}\n                  </p>\n                  <p className=\"flex items-center\">\n                    <span className=\"font-medium mr-2\">Phone:</span>\n                    <a href={`tel:${clinic.phone}`} className=\"text-blue-600 dark:text-blue-400 hover:underline\">\n                      {clinic.phone}\n                    </a>\n                  </p>\n                  <p className=\"flex items-start\">\n                    <span className=\"font-medium mr-2\">Hours:</span>\n                    {clinic.hours}\n                  </p>\n                  <div className=\"flex items-start\">\n                    <span className=\"font-medium mr-2\">Specialties:</span>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {clinic.specialties.map((specialty, idx) => (\n                        <span key={idx} className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-xs rounded-full\">\n                          {specialty}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-4 flex gap-2\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                    Call Now\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                    Get Directions\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8790, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Header from '@/components/Header'\nimport Sidebar from '@/components/Sidebar'\nimport PetDashboard from '@/components/PetDashboard'\nimport HealthRecords from '@/components/HealthRecords'\nimport ActivitiesLog from '@/components/ActivitiesLog'\nimport Medications from '@/components/Medications'\nimport OrderMedicine from '@/components/OrderMedicine'\nimport BehaviorChangesDashboard from '@/components/BehaviorChangesDashboard'\nimport Vaccinations from '@/components/Vaccinations'\nimport InsuranceDetails from '@/components/InsuranceDetails'\nimport PetProfile from '@/components/PetProfile'\nimport CustomerService from '@/components/CustomerService'\n\ntype ActiveSection = 'dashboard' | 'health' | 'activities' | 'medications' | 'orderMedicine' | 'behaviorChanges' | 'vaccinations' | 'insurance' | 'profile' | 'support'\n\nexport default function DashboardPage() {\n  const [activeSection, setActiveSection] = useState<ActiveSection>('dashboard')\n\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'dashboard':\n        return <PetDashboard />\n      case 'health':\n        return <HealthRecords />\n      case 'activities':\n        return <ActivitiesLog />\n      case 'medications':\n        return <Medications />\n      case 'orderMedicine':\n        return <OrderMedicine />\n      case 'behaviorChanges':\n        return <BehaviorChangesDashboard />\n      case 'vaccinations':\n        return <Vaccinations />\n      case 'insurance':\n        return <InsuranceDetails />\n      case 'profile':\n        return <PetProfile />\n      case 'support':\n        return <CustomerService />\n      default:\n        return <PetDashboard />\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <div className=\"flex\">\n        <Sidebar activeSection={activeSection} onSectionChange={setActiveSection} />\n        <main className=\"flex-1 p-6\">\n          {renderActiveSection()}\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAdA;;;;;;;;;;;;;;AAkBe,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElE,MAAM,sBAAsB;QAC1B,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,qIAAA,CAAA,UAAY;;;;;YACtB,KAAK;gBACH,qBAAO,6LAAC,sIAAA,CAAA,UAAa;;;;;YACvB,KAAK;gBACH,qBAAO,6LAAC,sIAAA,CAAA,UAAa;;;;;YACvB,KAAK;gBACH,qBAAO,6LAAC,oIAAA,CAAA,UAAW;;;;;YACrB,KAAK;gBACH,qBAAO,6LAAC,sIAAA,CAAA,UAAa;;;;;YACvB,KAAK;gBACH,qBAAO,6LAAC,iJAAA,CAAA,UAAwB;;;;;YAClC,KAAK;gBACH,qBAAO,6LAAC,qIAAA,CAAA,UAAY;;;;;YACtB,KAAK;gBACH,qBAAO,6LAAC,yIAAA,CAAA,UAAgB;;;;;YAC1B,KAAK;gBACH,qBAAO,6LAAC,mIAAA,CAAA,UAAU;;;;;YACpB,KAAK;gBACH,qBAAO,6LAAC,wIAAA,CAAA,UAAe;;;;;YACzB;gBACE,qBAAO,6LAAC,qIAAA,CAAA,UAAY;;;;;QACxB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,gIAAA,CAAA,UAAO;wBAAC,eAAe;wBAAe,iBAAiB;;;;;;kCACxD,6LAAC;wBAAK,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAKX;GAzCwB;KAAA","debugId":null}}]
}